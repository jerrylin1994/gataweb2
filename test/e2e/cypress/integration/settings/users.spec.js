describe( "Dashboard Settings - Users", () => {
  const base = require( "../../support/base" )
  const admin_panel = Cypress.env( "admin" )
  const dashboard = Cypress.env( "dashboard" )
  const user_data = require( "../../fixtures/user_data" )

  before( () => {
    base.login( admin_panel, "ac" )
    base.deleteMerchantAndTwilioAccount()
    base.deleteIntercomUsers()
  } )

  beforeEach( () => {
    base.login( admin_panel, "ac" )
  } )

  it( "Should be able to add a new user", () => {
    const dashboard_username = base.createRandomUsername()
    base.addMerchant( user_data.merchant_name, user_data.email )
      .then( ( response ) => {
        const merchant_id = response.body.id
        base.loginDashboardAsOnelocalAdmin( "ac", merchant_id )
      } )
    cy.visit( dashboard.host )
    cy.get( "a[href=\"/admin/settings\"]" )
      .click()
    cy.get( "a[href=\"/admin/settings/auth\"]" )
      .click()
    cy.contains( "Users" )
      .click()
    cy.get( "a[href=\"/admin/settings/auth/users\"]" )
      .click()
    cy.contains( "Add New User" )
      .click()
    cy.get( "md-radio-button[value=\"username\"]" )
      .click()
    cy.get( "input[ng-model=\"model.username\"]" )
      .type( dashboard_username )
    cy.get( "input[type=\"password\"]" )
      .type( "qwerty" )
    cy.contains( "Confirm" )
      .click()
    cy.contains( "User created! Enter extra info below" )
      .should( "be.visible" )
    cy.contains( "Skip" )
      .click()
    cy.contains( "User has been created" )
      .should( "be.visible" )
  } )

  it( "Should be able to choose password for a new user", () => {
    const dashboard_username = base.createRandomUsername()
    base.addMerchant( user_data.merchant_name, user_data.email )
      .then( ( response ) => {
        const merchant_id = response.body.id
        base.loginDashboardAsOnelocalAdmin( "ac", merchant_id )
        base.createDashboardUser( merchant_id, dashboard_username )
      } )
    cy.clearCookies()
    cy.visit( dashboard.host )
    cy.get( "#input_0" )
      .type( dashboard_username )
    cy.get( "#password" )
      .type( "qwerty" )
    cy.get( "button[type=\"submit\"]" )
      .click()
    cy.contains( "Tell Me About Yourself" )
      .should( "be.visible" )
    cy.wait( 1000 ) // to help with weird flake on the choose your PW modal where it would not type on the modal
    cy.get( "input[name=\"name\"]" )
      .type( user_data.name )
    cy.get( "input[name=\"password\"]" )
      .type( "qwerty1" )
    cy.get( "input[name=\"confirmation\"]" )
      .type( "qwerty1" )
    cy.contains( "Get Started" )
      .click()
    cy.url()
      .should( "equal", `${ dashboard.host }/admin` )
    cy.contains( "Welcome To Your OneLocal Dashboard" )
      .should( "be.visible" )
    cy.contains( dashboard.accounts.all_products.merchant_name )
      .should( "be.visible" )
    cy.contains( user_data.name )
      .should( "be.visible" )
  } )

  it( "Should be able to login to dashboard as a user", () => {
    const dashboard_username = base.createRandomUsername()
    base.addMerchant( user_data.merchant_name, user_data.email )
      .then( ( response ) => {
        const merchant_id = response.body.id
        base.loginDashboardAsOnelocalAdmin( "ac", merchant_id )
        base.createDashboardUser( merchant_id, dashboard_username )
          .then( ( response ) => {
            base.updateDashboardUserPassword( merchant_id, response.body.refs.account_ids[ 0 ] )
          } )
      } )
    cy.clearCookies()
    cy.visit( dashboard.host )
    cy.get( "#input_0" )
      .type( dashboard_username )
    cy.get( "#password" )
      .type( "qwerty" )
    cy.get( "button[type=\"submit\"]" )
      .click()
    cy.url()
      .should( "equal", `${ dashboard.host }/admin` )
    cy.contains( "Welcome To Your OneLocal Dashboard" )
      .should( "be.visible" )
    cy.contains( dashboard.accounts.all_products.merchant_name )
      .should( "be.visible" )
    cy.contains( "Cypress" )
      .should( "be.visible" )
  } )
} )
